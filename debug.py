from database.models import db
import logging

logger = logging.getLogger(__name__)

def debug_database():
    """–î–µ—Ç–∞–ª—å–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    logger.info("üîß –ó–ê–ü–£–°–ö –î–ï–¢–ê–õ–¨–ù–û–á –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ò –ë–ê–ó–ò –î–ê–ù–ò–•")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    all_users = db.get_all_users()
    logger.info(f"üîß –í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ –±–∞–∑—ñ: {len(all_users)}")
    
    for user in all_users:
        user_id = user[1] if len(user) > 1 else "N/A"
        username = user[2] if len(user) > 2 else "N/A"
        first_name = user[3] if len(user) > 3 else "N/A"
        age = user[4] if len(user) > 4 else "N/A"
        gender = user[5] if len(user) > 5 else "N/A"
        city = user[6] if len(user) > 6 else "N/A"
        seeking_gender = user[7] if len(user) > 7 else "N/A"
        has_photo = user[10] if len(user) > 10 else "N/A"
        
        logger.info(f"üîß –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ID={user_id}, –Ü–º'—è={first_name}, –í—ñ–∫={age}, –°—Ç–∞—Ç—å={gender}, –®—É–∫–∞—î={seeking_gender}, –§–æ—Ç–æ={has_photo}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—à—É–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    if len(all_users) >= 2:
        user1 = all_users[0]
        user2 = all_users[1]
        
        user1_id = user1[1]
        user2_id = user2[1]
        
        logger.info(f"üîß –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫ –¥–ª—è {user1_id} (—à—É–∫–∞—î {user1[7]})")
        result1 = db.get_random_user(user1_id)
        logger.info(f"üîß –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {user1_id}: {'–ó–Ω–∞–π–¥–µ–Ω–æ' if result1 else '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}")
        
        logger.info(f"üîß –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫ –¥–ª—è {user2_id} (—à—É–∫–∞—î {user2[7]})")
        result2 = db.get_random_user(user2_id)
        logger.info(f"üîß –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {user2_id}: {'–ó–Ω–∞–π–¥–µ–Ω–æ' if result2 else '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}")

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ
if __name__ == "__main__":
    debug_database()