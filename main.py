import os
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–µ—Å—Ç—É—î–º–æ —ñ–º–ø–æ—Ä—Ç –±—ñ–±–ª—ñ–æ—Ç–µ–∫
try:
    from telegram import Update
    from telegram.ext import Application, CommandHandler, ContextTypes
    logger.info("‚úÖ –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    TELEGRAM_LOADED = True
except ImportError as e:
    logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫: {e}")
    TELEGRAM_LOADED = False

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ—Å—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ /start –¥–ª—è —Ç–µ—Å—Ç—É"""
    user = update.effective_user
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤—ñ—Ç, {user.first_name}!\n"
        f"ü§ñ –ë–æ—Ç –ø—Ä–∞—Ü—é—î –Ω–∞ Railway!\n"
        f"‚úÖ –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {TELEGRAM_LOADED}"
    )

def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞ –Ω–∞ Railway...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Railway
    TOKEN = os.environ.get('BOT_TOKEN')
    
    if not TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")
        return
    
    if not TELEGRAM_LOADED:
        logger.error("‚ùå –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")
        return
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
        application = Application.builder().token(TOKEN).build()
        application.add_handler(CommandHandler("start", start))
        
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
        application.run_polling(drop_pending_updates=True)
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()