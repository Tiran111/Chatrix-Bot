import os
import logging
from telegram.ext import Updater, CommandHandler

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def start(update, context):
    user = update.message.from_user
    update.message.reply_text(f'–ü—Ä–∏–≤—ñ—Ç {user.first_name}! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π! ‚úÖ')

def main():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω
        TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
        
        if not TOKEN:
            logger.error("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            # –í–∏–≤–µ–¥–µ–º–æ –≤—Å—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –¥–µ–±–∞–≥—É
            for key, value in os.environ.items():
                if 'BOT' in key or 'TOKEN' in key:
                    logger.info(f"üîç {key}: {value}")
            return
            
        logger.info(f"‚úÖ –¢–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–æ, –¥–æ–≤–∂–∏–Ω–∞: {len(TOKEN)}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ Updater
        updater = Updater(TOKEN, use_context=True)
        dispatcher = updater.dispatcher
        
        # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
        dispatcher.add_handler(CommandHandler("start", start))
        
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
        updater.start_polling()
        logger.info("ü§ñ –ë–æ—Ç –ø—Ä–∞—Ü—é—î!")
        updater.idle()
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()