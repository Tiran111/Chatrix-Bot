import os
import logging
from flask import Flask, request, jsonify
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import threading
import time
import requests

# –Ü–º–ø–æ—Ä—Ç –≤–ª–∞—Å–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
from config import initialize_config, TOKEN, ADMIN_ID, DATABASE_URL, RENDER, WEBHOOK_URL, KEEP_ALIVE_INTERVAL
from database import db
from states import States, user_states, user_profiles, gallery_view_data

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
initialize_config()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Flask –¥–æ–¥–∞—Ç–∫—É
app = Flask(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# ========== –ö–õ–ê–í–Ü–ê–¢–£–†–ò ==========

def get_main_menu_keyboard():
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å"),
        KeyboardButton("üîç –ü–æ—à—É–∫ –∞–Ω–∫–µ—Ç"),
        KeyboardButton("‚≠ê –ü—Ä–µ–º—ñ—É–º"),
        KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏"),
        KeyboardButton("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞")
    )
    return keyboard

def get_profile_keyboard():
    """–ú–µ–Ω—é –ø—Ä–æ—Ñ—ñ–ª—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å"),
        KeyboardButton("üì∑ –ú–æ—ó —Ñ–æ—Ç–æ"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    )
    return keyboard

def get_edit_profile_keyboard():
    """–ú–µ–Ω—é —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –≤—ñ–∫"),
        KeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—å"),
        KeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ"),
        KeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —Ü—ñ–ª—å"),
        KeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –±—ñ–æ"),
        KeyboardButton("üì∑ –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é")
    )
    return keyboard

def get_gender_keyboard():
    """–í–∏–±—ñ—Ä —Å—Ç–∞—Ç—ñ"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üë® –ß–æ–ª–æ–≤—ñ–∫"),
        KeyboardButton("üë© –ñ—ñ–Ω–∫–∞"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    )
    return keyboard

def get_seeking_gender_keyboard():
    """–í–∏–±—ñ—Ä —Å—Ç–∞—Ç—ñ –¥–ª—è –ø–æ—à—É–∫—É"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üë® –ß–æ–ª–æ–≤—ñ–∫—ñ–≤"),
        KeyboardButton("üë© –ñ—ñ–Ω–æ–∫"),
        KeyboardButton("üë• –í—Å—ñ—Ö"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    )
    return keyboard

def get_goal_keyboard():
    """–í–∏–±—ñ—Ä —Ü—ñ–ª–µ–π"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üíï –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏"),
        KeyboardButton("üí¨ –°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è"),
        KeyboardButton("üç∑ –î—Ä—É–∂–±–∞"),
        KeyboardButton("üèÉ‚Äç‚ôÇÔ∏è –ü—Ä–æ–≥—É–ª—è–Ω–∫–∏"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    )
    return keyboard

def get_gallery_keyboard():
    """–ú–µ–Ω—é –≥–∞–ª–µ—Ä–µ—ó"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ"),
        KeyboardButton("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–æ—Ç–æ"),
        KeyboardButton("‚≠ê –ó—Ä–æ–±–∏—Ç–∏ –≥–æ–ª–æ–≤–Ω–∏–º"),
        KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    )
    return keyboard

def get_back_keyboard():
    """–ü—Ä–æ—Å—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return keyboard

def get_admin_keyboard():
    """–ê–¥–º—ñ–Ω –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        KeyboardButton("üîç –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"),
        KeyboardButton("üö´ –ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"),
        KeyboardButton("‚úÖ –†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏"),
        KeyboardButton("üì¢ –†–æ–∑—Å–∏–ª–∫–∞"),
        KeyboardButton("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
    )
    return keyboard

# ========== –û–°–ù–û–í–ù–Ü –§–£–ù–ö–¶–Ü–á ==========

def set_user_state(user_id, state):
    """–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_states[user_id] = state

def get_user_state(user_id):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    return user_states.get(user_id, States.START)

def save_user_profile(user_id, profile_data):
    """–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    if user_id not in user_profiles:
        user_profiles[user_id] = {}
    user_profiles[user_id].update(profile_data)

def get_user_profile(user_id):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    return user_profiles.get(user_id, {})

def is_user_banned(user_id):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"""
    user = db.get_user(user_id)
    return user and user['is_banned']

# ========== –û–ë–†–û–ë–ù–ò–ö–ò –ö–û–ú–ê–ù–î ==========

@app.route('/webhook', methods=['POST'])
def webhook():
    """Webhook –¥–ª—è Telegram"""
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    return 'OK'

@bot.message_handler(commands=['start'])
def handle_start(message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user_id = message.from_user.id
    
    # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É
    db.add_user(
        user_id=user_id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –±–∞–Ω
    if is_user_banned(user_id):
        bot.send_message(user_id, "‚ùå –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ.")
        return
    
    # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
    set_user_state(user_id, States.START)
    
    # –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    welcome_text = """
    üëã –í—ñ—Ç–∞—é –≤ Dating Bot!
    
    –¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –∑–Ω–∞–π—Ç–∏ –Ω–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞, —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è —Ç–∞ –º–æ–∂–ª–∏–≤–æ –∫–æ—Ö–∞–Ω–Ω—è!
    
    üéØ –ó–∞–ø–æ–≤–Ω–∏ –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ –ø–æ—á–Ω–∏ –ø–æ—à—É–∫!
    """
    
    bot.send_message(user_id, welcome_text, reply_markup=get_main_menu_keyboard())

@bot.message_handler(func=lambda message: get_user_state(message.from_user.id) == States.START)
def handle_main_menu(message):
    """–û–±—Ä–æ–±–∫–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    user_id = message.from_user.id
    text = message.text
    
    if text == "üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å":
        show_profile(message)
    elif text == "üîç –ü–æ—à—É–∫ –∞–Ω–∫–µ—Ç":
        start_search(message)
    elif text == "‚≠ê –ü—Ä–µ–º—ñ—É–º":
        show_premium(message)
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        show_contacts(message)
    elif text == "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞":
        show_help(message)
    elif str(user_id) == str(ADMIN_ID) and text == "üëë –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å":
        show_admin_panel(message)
    else:
        bot.send_message(user_id, "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())

# ========== –ü–†–û–§–Ü–õ–¨ ==========

def show_profile(message):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = message.from_user.id
    user = db.get_user(user_id)
    
    if not user:
        bot.send_message(user_id, "‚ùå –ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return
    
    profile_text = f"""
üë§ *–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:*

*–Ü–º'—è:* {user['first_name']} {user['last_name'] or ''}
*–í—ñ–∫:* {user['age'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–°—Ç–∞—Ç—å:* {user['gender'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–ú—ñ—Å—Ç–æ:* {user['city'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–®—É–∫–∞—é:* {user['seeking_gender'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–¶—ñ–ª—å:* {user['goal'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–ë—ñ–æ:* {user['bio'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
    """
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ —è–∫—â–æ —î
    main_photo = db.get_main_photo(user_id)
    if main_photo:
        try:
            bot.send_photo(user_id, main_photo['file_id'], caption=profile_text, 
                         parse_mode='Markdown', reply_markup=get_profile_keyboard())
            return
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
    
    # –Ø–∫—â–æ —Ñ–æ—Ç–æ –Ω–µ–º–∞—î –∞–±–æ –ø–æ–º–∏–ª–∫–∞
    bot.send_message(user_id, profile_text, parse_mode='Markdown', 
                   reply_markup=get_profile_keyboard())

@bot.message_handler(func=lambda message: message.text == "‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å")
def handle_edit_profile(message):
    """–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    user_id = message.from_user.id
    bot.send_message(user_id, "–û–±–µ—Ä—ñ—Ç—å —â–æ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏:", 
                   reply_markup=get_edit_profile_keyboard())

@bot.message_handler(func=lambda message: message.text == "üì∑ –ú–æ—ó —Ñ–æ—Ç–æ")
def handle_my_photos(message):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ—ó —Ñ–æ—Ç–æ"""
    user_id = message.from_user.id
    photos = db.get_user_photos(user_id)
    
    if not photos:
        bot.send_message(user_id, "üì∑ –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π.", 
                       reply_markup=get_gallery_keyboard())
        return
    
    for photo in photos:
        try:
            caption = "‚≠ê –ì–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ" if photo['is_main'] else f"–§–æ—Ç–æ #{photo['id']}"
            bot.send_photo(user_id, photo['file_id'], caption=caption)
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
    
    bot.send_message(user_id, f"üì∏ –£—Å—å–æ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π: {len(photos)}", 
                   reply_markup=get_gallery_keyboard())

# ========== –ü–û–®–£–ö ==========

def start_search(message):
    """–ü–æ—á–∞—Ç–æ–∫ –ø–æ—à—É–∫—É"""
    user_id = message.from_user.id
    user = db.get_user(user_id)
    
    if not user or not user['age'] or not user['gender']:
        bot.send_message(user_id, "‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Å–ø–æ—á–∞—Ç–∫—É —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å!")
        return
    
    # –ü—Ä–æ—Å—Ç–∏–π –ø–æ—à—É–∫ - –∑–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—è—â–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    search_results = db.search_users(
        current_user_id=user_id,
        gender=user['seeking_gender'] if user['seeking_gender'] != 'üë• –í—Å—ñ—Ö' else None
    )
    
    if not search_results:
        bot.send_message(user_id, "üòî –ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –ø—ñ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        return
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –∞–Ω–∫–µ—Ç—É
    show_user_profile(message, search_results[0]['user_id'])

def show_user_profile(message, profile_user_id, index=0):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω–∫–µ—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = message.from_user.id
    profile_user = db.get_user(profile_user_id)
    
    if not profile_user:
        bot.send_message(user_id, "‚ùå –ê–Ω–∫–µ—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return
    
    profile_text = f"""
üë§ *–ê–Ω–∫–µ—Ç–∞:*

*–Ü–º'—è:* {profile_user['first_name']} {profile_user['last_name'] or ''}
*–í—ñ–∫:* {profile_user['age'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–°—Ç–∞—Ç—å:* {profile_user['gender'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–ú—ñ—Å—Ç–æ:* {profile_user['city'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–¶—ñ–ª—å:* {profile_user['goal'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
*–ë—ñ–æ:* {profile_user['bio'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
    """
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ
    main_photo = db.get_main_photo(profile_user_id)
    if main_photo:
        try:
            # –°—Ç–≤–æ—Ä—é—î–º–æ inline –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –¥—ñ–π
            keyboard = InlineKeyboardMarkup()
            keyboard.add(
                InlineKeyboardButton("‚ù§Ô∏è –õ–∞–π–∫", callback_data=f"like_{profile_user_id}"),
                InlineKeyboardButton("‚û°Ô∏è –î–∞–ª—ñ", callback_data="next_profile"),
                InlineKeyboardButton("üì∏ –ì–∞–ª–µ—Ä–µ—è", callback_data=f"gallery_{profile_user_id}")
            )
            
            bot.send_photo(user_id, main_photo['file_id'], caption=profile_text,
                         parse_mode='Markdown', reply_markup=keyboard)
            return
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
    
    # –Ø–∫—â–æ —Ñ–æ—Ç–æ –Ω–µ–º–∞—î
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("‚ù§Ô∏è –õ–∞–π–∫", callback_data=f"like_{profile_user_id}"),
        InlineKeyboardButton("‚û°Ô∏è –î–∞–ª—ñ", callback_data="next_profile")
    )
    
    bot.send_message(user_id, profile_text, parse_mode='Markdown', reply_markup=keyboard)

# ========== CALLBACK HANDLERS ==========

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    """–û–±—Ä–æ–±–∫–∞ callback –∫–Ω–æ–ø–æ–∫"""
    user_id = call.from_user.id
    
    if call.data.startswith('like_'):
        profile_user_id = int(call.data.split('_')[1])
        db.add_like(user_id, profile_user_id)
        bot.answer_callback_query(call.id, "‚ù§Ô∏è –í–∏ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∞–π–∫!")
        
    elif call.data == 'next_profile':
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É –∞–Ω–∫–µ—Ç—É
        user = db.get_user(user_id)
        search_results = db.search_users(
            current_user_id=user_id,
            gender=user['seeking_gender'] if user['seeking_gender'] != 'üë• –í—Å—ñ—Ö' else None
        )
        
        if search_results:
            show_user_profile(call.message, search_results[0]['user_id'])
        else:
            bot.send_message(user_id, "üòî –ë—ñ–ª—å—à–µ –∞–Ω–∫–µ—Ç –Ω–µ–º–∞—î.")
        
    elif call.data.startswith('gallery_'):
        profile_user_id = int(call.data.split('_')[1])
        show_user_gallery(call.message, profile_user_id)

def show_user_gallery(message, profile_user_id):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –≥–∞–ª–µ—Ä–µ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = message.from_user.id
    photos = db.get_user_photos(profile_user_id)
    
    if not photos:
        bot.send_message(user_id, "üì∑ –£ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —â–µ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π.")
        return
    
    for photo in photos:
        try:
            caption = "‚≠ê –ì–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ" if photo['is_main'] else f"–§–æ—Ç–æ #{photo['id']}"
            bot.send_photo(user_id, photo['file_id'], caption=caption)
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")

# ========== –î–û–î–ê–¢–ö–û–í–Ü –§–£–ù–ö–¶–Ü–á ==========

def show_premium(message):
    """–ü—Ä–µ–º—ñ—É–º —Ñ—É–Ω–∫—Ü—ñ—ó"""
    user_id = message.from_user.id
    premium_text = """
    ‚≠ê *–ü—Ä–µ–º—ñ—É–º —Ñ—É–Ω–∫—Ü—ñ—ó:*
    
    üöÄ *–†–æ–∑—à–∏—Ä–µ–Ω–∏–π –ø–æ—à—É–∫* - –±—ñ–ª—å—à–µ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    üëÄ *–ù–µ–≤–∏–¥–∏–º–∫–∞* - –ø–µ—Ä–µ–≥–ª—è–¥ –±–µ–∑ —Å–ª—ñ–¥—ñ–≤
    üíå *–ù–µ–æ–±–º–µ–∂–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è*
    üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ—ñ–ª—é*
    
    üí∞ *–í–∞—Ä—Ç—ñ—Å—Ç—å:* 99 –≥—Ä–Ω/–º—ñ—Å—è—Ü—å
    
    –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: @admin
    """
    bot.send_message(user_id, premium_text, parse_mode='Markdown')

def show_contacts(message):
    """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"""
    user_id = message.from_user.id
    contacts_text = """
    üìû *–ö–æ–Ω—Ç–∞–∫—Ç–∏:*
    
    üë®‚Äçüíº *–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä:* @admin
    üìß *Email:* admin@example.com
    üåê *–°–∞–π—Ç:* example.com
    
    ‚ö†Ô∏è *–ü—Ä–∞–≤–∏–ª–∞:*
    - –ü–æ–≤–∞–∂–∞–π—Ç–µ —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    - –ù–µ —Ä–æ–∑–≥–æ–ª–æ—à—É–π—Ç–µ –æ—Å–æ–±–∏—Å—Ç—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
    - –ù–µ —Å–ø–∞–º—Ç–µ
    
    –ó–∞ –ø–æ—Ä—É—à–µ–Ω–Ω—è - –±–∞–Ω!
    """
    bot.send_message(user_id, contacts_text, parse_mode='Markdown')

def show_help(message):
    """–î–æ–≤—ñ–¥–∫–∞"""
    user_id = message.from_user.id
    help_text = """
    ‚ÑπÔ∏è *–î–æ–≤—ñ–¥–∫–∞:*
    
    *–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º:*
    1. –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø—Ä–æ—Ñ—ñ–ª—å (/start)
    2. –î–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ
    3. –ü–æ—á–Ω—ñ—Ç—å –ø–æ—à—É–∫ –∞–Ω–∫–µ—Ç
    4. –°–ø—ñ–ª–∫—É–π—Ç–µ—Å—å —Ç–∞ –∑–Ω–∞—Ö–æ–¥—å—Ç–µ –Ω–æ–≤–∏—Ö –¥—Ä—É–∑—ñ–≤!
    
    *–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:*
    /start - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    /profile - –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å
    /search - –ü–æ—à—É–∫ –∞–Ω–∫–µ—Ç
    
    *–ü—Ä–æ–±–ª–µ–º–∏?* –ó–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: @admin
    """
    bot.send_message(user_id, help_text, parse_mode='Markdown')

def show_admin_panel(message):
    """–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å"""
    user_id = message.from_user.id
    if str(user_id) != str(ADMIN_ID):
        bot.send_message(user_id, "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ!")
        return
    
    users_count = len(db.get_all_users())
    admin_text = f"""
    üëë *–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å*
    
    üìä *–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:* {users_count}
    ‚ö†Ô∏è *–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ:* {len([u for u in db.get_all_users() if u['is_banned']])}
    
    –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:
    """
    bot.send_message(user_id, admin_text, parse_mode='Markdown', 
                   reply_markup=get_admin_keyboard())

# ========== KEEP-ALIVE FUNCTION ==========

def keep_alive():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –Ω–∞ Render"""
    while True:
        try:
            # –ü—Ä–æ—Å—Ç–æ —á–µ–∫–∞—î–º–æ
            time.sleep(KEEP_ALIVE_INTERVAL)
            logger.info("üîÑ Keep-alive: –±–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π")
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ keep-alive: {e}")

# ========== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==========

def setup_bot():
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞"""
    try:
        if RENDER:
            # –ù–∞ Render –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ webhook
            bot.remove_webhook()
            time.sleep(1)
            bot.set_webhook(url=WEBHOOK_URL)
            logger.info(f"‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBHOOK_URL}")
        else:
            # –õ–æ–∫–∞–ª—å–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ polling
            bot.remove_webhook()
            logger.info("‚úÖ Webhook –≤–∏–¥–∞–ª–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è polling")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ keep-alive –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
        keep_alive_thread = threading.Thread(target=keep_alive, daemon=True)
        keep_alive_thread.start()
        logger.info("‚úÖ Keep-alive thread –∑–∞–ø—É—â–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞: {e}")

@app.route('/')
def home():
    """–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"""
    return "ü§ñ Dating Bot is running!"

@app.route('/health')
def health_check():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤'—è"""
    return jsonify({"status": "healthy", "bot": "running"})

if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Dating Bot...")
    setup_bot()
    
    if RENDER:
        # –ù–∞ Render –∑–∞–ø—É—Å–∫–∞—î–º–æ Flask —Å–µ—Ä–≤–µ—Ä
        port = int(os.environ.get('PORT', 5000))
        app.run(host='0.0.0.0', port=port, debug=False)
    else:
        # –õ–æ–∫–∞–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞—î–º–æ polling
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ polling...")
        bot.infinity_polling(timeout=60, long_polling_timeout=60)