import os
import logging

# –°–ø—Ä–æ—Å—Ç–∏–º–æ –∫–æ–¥ - –±–µ–∑ —ñ–º–ø–æ—Ä—Ç—ñ–≤ –Ω–∞ –ø–æ—á–∞—Ç–∫—É
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main():
    logger.info("üöÄ –°–ø—Ä–æ–±–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞...")
    
    # –°–ø–µ—Ä—à—É –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —á–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ
    try:
        from telegram import Update
        from telegram.ext import Application, CommandHandler, ContextTypes
        logger.info("‚úÖ –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")
    except ImportError as e:
        logger.error(f"‚ùå –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ: {e}")
        logger.info("üì¶ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ requirements.txt")
        return
    
    # –¢—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —ñ–º–ø–æ—Ä—Ç—É –≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó
    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        await update.message.reply_text(f"üëã –ü—Ä–∏–≤—ñ—Ç, {user.first_name}! –ë–æ—Ç –ø—Ä–∞—Ü—é—î –Ω–∞ Railway! üöÄ")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω
    TOKEN = os.environ.get('BOT_TOKEN')
    if not TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return
    
    try:
        app = Application.builder().token(TOKEN).build()
        app.add_handler(CommandHandler("start", start))
        
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
        app.run_polling(drop_pending_updates=True)
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")

if __name__ == '__main__':
    main()