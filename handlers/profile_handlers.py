import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from database.models import db
from utils.states import user_states, States
from keyboards.main_menu import get_main_menu, get_back_to_menu_keyboard

logger = logging.getLogger(__name__)

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ"""
    try:
        user = update.effective_user
        user_id = user.id
        state = user_states.get(user_id, States.START)
        
        if state == States.ADDING_PHOTO:
            # –û—Ç—Ä–∏–º—É—î–º–æ —Ñ–∞–π–ª —Ñ–æ—Ç–æ –∑ –Ω–∞–π–≤–∏—â–æ—é —è–∫—ñ—Å—Ç—é
            photo_file = await update.message.photo[-1].get_file()
            file_id = photo_file.file_id
            
            logger.info(f"üì∏ –û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–æ—Ç–æ –≤—ñ–¥ {user_id}, file_id: {file_id}")
            
            # –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
            success = db.add_profile_photo(user_id, file_id)
            
            if success:
                # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
                user_states[user_id] = States.START
                
                # –ü–æ–∫–∞–∑—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å
                photos = db.get_profile_photos(user_id)
                user_info = db.get_user(user_id)
                
                success_text = (
                    f"‚úÖ <b>–§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!</b>\n\n"
                    f"üì∏ <b>–¢–µ–ø–µ—Ä —É –≤–∞—à–æ–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ:</b> {len(photos)}/3 —Ñ–æ—Ç–æ\n"
                    f"‚ù§Ô∏è <b>–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:</b> {user_info['rating'] if user_info else 0}\n\n"
                )
                
                if len(photos) < 3:
                    success_text += "–ú–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —â–µ —Ñ–æ—Ç–æ –∞–±–æ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –æ—Ü—ñ–Ω–∫–∏ —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ üëá"
                else:
                    success_text += "üéâ –í–∏ –¥–æ–¥–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ç–æ! –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –æ—Ü—ñ–Ω—é–≤–∞—Ç–∏ —ñ–Ω—à–∏—Ö üëá"
                
                await update.message.reply_text(
                    success_text,
                    reply_markup=get_main_menu(),
                    parse_mode='HTML'
                )
                
            else:
                error_text = (
                    "‚ùå <b>–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ</b>\n\n"
                )
                
                photos = db.get_profile_photos(user_id)
                if len(photos) >= 3:
                    error_text += (
                        "‚ö†Ô∏è –í–∏ –≤–∂–µ –¥–æ—Å—è–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ñ–æ—Ç–æ (3).\n"
                        "–©–æ–± –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ —Ñ–æ—Ç–æ, —Å–ø–æ—á–∞—Ç–∫—É –≤–∏–¥–∞–ª—ñ—Ç—å –æ–¥–Ω–µ –∑ —ñ—Å–Ω—É—é—á–∏—Ö.\n\n"
                        "üë§ –ü–µ—Ä–µ–π–¥—ñ—Ç—å —É '–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å' –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ—Ç–æ"
                    )
                else:
                    error_text += (
                        "–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:\n"
                        "‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º\n"
                        "‚Ä¢ –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ñ–æ—Ç–æ\n"
                        "‚Ä¢ –¢–µ—Ö–Ω—ñ—á–Ω—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è\n\n"
                        "üîÑ –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏"
                    )
                
                await update.message.reply_text(
                    error_text,
                    reply_markup=get_main_menu(),
                    parse_mode='HTML'
                )
        else:
            await update.message.reply_text(
                "üì∏ –©–æ–± –¥–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ, –æ–±–µ—Ä—ñ—Ç—å '–î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ' –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é üëá",
                reply_markup=get_main_menu()
            )
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –°—Ç–∞–ª–∞—Å—è –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ñ–æ—Ç–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu()
        )

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    try:
        user_id = update.effective_user.id
        text = update.message.text
        state = user_states.get(user_id, States.START)
        
        logger.info(f"üìù –¢–µ–∫—Å—Ç –≤—ñ–¥ {user_id} —É —Å—Ç–∞–Ω—ñ {state}: {text}")
        
        if state == States.EDITING_PROFILE:
            # –û–±—Ä–æ–±–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
            await handle_profile_edit(update, context, text)
        elif state == States.ADDING_BIO:
            # –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó
            await handle_bio_add(update, context, text)
        else:
            # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            await update.message.reply_text(
                "üí¨ –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é üëá",
                reply_markup=get_main_menu()
            )
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç—É: {e}", exc_info=True)

async def show_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑ –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    try:
        query = update.callback_query
        user_id = query.from_user.id
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = db.get_user(user_id)
        if not user:
            await query.edit_message_text(
                "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å",
                reply_markup=get_back_to_menu_keyboard()
            )
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        photos = db.get_profile_photos(user_id)
        
        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ—ñ–ª—é
        profile_text = (
            f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å</b>\n\n"
            f"üÜî ID: {user['telegram_id']}\n"
            f"üìõ –Ü–º'—è: {user['first_name']}\n"
            f"üë§ Username: @{user['username'] if user['username'] else '–ù–µ–º–∞—î'}\n"
            f"üì∏ –§–æ—Ç–æ: {len(photos)}/3\n"
            f"‚ù§Ô∏è –†–µ–π—Ç–∏–Ω–≥: {user.get('rating', 5.0):.1f}\n"
            f"üëç –û—Ç—Ä–∏–º–∞–Ω–æ –ª–∞–π–∫—ñ–≤: {user.get('likes_count', 0)}\n"
            f"ü§ù –ú–∞—Ç—á—ñ: {len(db.get_user_matches(user_id))}\n"
        )
        
        if user.get('age'):
            profile_text += f"üéÇ –í—ñ–∫: {user['age']}\n"
        if user.get('gender'):
            profile_text += f"‚ößÔ∏è –°—Ç–∞—Ç—å: {user['gender']}\n"
        if user.get('city'):
            profile_text += f"üèôÔ∏è –ú—ñ—Å—Ç–æ: {user['city']}\n"
        if user.get('goal'):
            profile_text += f"üéØ –¶—ñ–ª—å: {user['goal']}\n"
        
        profile_text += f"üìÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: {user.get('created_at', '–ù–µ–≤—ñ–¥–æ–º–æ')[:10]}\n"
        profile_text += f"üïê –û—Å—Ç–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {user.get('last_active', '–ù–µ–≤—ñ–¥–æ–º–æ')[:16]}\n"
        
        # –î–æ–¥–∞—î–º–æ –±—ñ–æ–≥—Ä–∞—Ñ—ñ—é —è–∫—â–æ —î
        if user.get('bio'):
            profile_text += f"\nüìù <b>–ü—Ä–æ —Å–µ–±–µ:</b>\n{user['bio']}\n"
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª–µ–º
        keyboard = []
        
        if photos:
            keyboard.append([InlineKeyboardButton("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–æ—Ç–æ", callback_data="delete_photos")])
        
        if len(photos) < 3:
            keyboard.append([InlineKeyboardButton("üì∏ –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ", callback_data="add_photo")])
        
        keyboard.extend([
            [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å", callback_data="edit_profile")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_rating")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await query.edit_message_text(
            profile_text,
            reply_markup=reply_markup,
            parse_mode='HTML'
        )
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –ø—Ä–æ—Ñ—ñ–ª—é: {e}", exc_info=True)
        try:
            await query.edit_message_text(
                "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é",
                reply_markup=get_back_to_menu_keyboard()
            )
        except Exception:
            pass

async def handle_delete_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ"""
    try:
        query = update.callback_query
        user_id = query.from_user.id
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        photos = db.get_profile_photos(user_id)
        
        if not photos:
            await query.answer("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î —Ñ–æ—Ç–æ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è")
            return
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–∂–Ω–æ–≥–æ —Ñ–æ—Ç–æ
        keyboard = []
        for i, photo_id in enumerate(photos, 1):
            keyboard.append([
                InlineKeyboardButton(f"üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–æ—Ç–æ {i}", callback_data=f"delete_photo_{photo_id}")
            ])
        
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="view_profile")])
        
        await query.edit_message_text(
            f"üñºÔ∏è <b>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ—Ç–æ</b>\n\n"
            f"–û–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:",
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='HTML'
        )
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ—Ç–æ: {e}", exc_info=True)

async def handle_profile_edit(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
    """–û–±—Ä–æ–±–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    try:
        user_id = update.effective_user.id
        
        # –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ, –≤—ñ–∫—É, –º—ñ—Å—Ç–∞ —Ç–æ—â–æ
        # –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
        # db.update_user_profile(user_id, {'first_name': text})
        
        await update.message.reply_text(
            "‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ!",
            reply_markup=get_main_menu()
        )
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        user_states[user_id] = States.START
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é: {e}")
        await update.message.reply_text(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é",
            reply_markup=get_main_menu()
        )

async def handle_bio_add(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
    """–û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó"""
    try:
        user_id = update.effective_user.id
        
        # –û–±–º–µ–∂—É—î–º–æ –¥–æ–≤–∂–∏–Ω—É –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó
        if len(text) > 500:
            await update.message.reply_text(
                "‚ùå –ó–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∏–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:"
            )
            return
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –±—ñ–æ–≥—Ä–∞—Ñ—ñ—é
        success = db.cursor.execute(
            'UPDATE users SET bio = ? WHERE telegram_id = ?',
            (text, user_id)
        )
        db.conn.commit()
        
        if success:
            await update.message.reply_text(
                "‚úÖ –ë—ñ–æ–≥—Ä–∞—Ñ—ñ—é –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é!",
                reply_markup=get_main_menu()
            )
        else:
            await update.message.reply_text(
                "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó",
                reply_markup=get_main_menu()
            )
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        user_states[user_id] = States.START
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó: {e}")
        await update.message.reply_text(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—ó",
            reply_markup=get_main_menu()
        )