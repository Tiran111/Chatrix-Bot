import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
try:
    from database_postgres import db
except ImportError:
    from database.models import db
from utils.states import user_states, States, user_profiles
from keyboards.main_menu import get_main_menu

logger = logging.getLogger(__name__)

async def start_profile_creation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    user_data = db.get_user(user.id)
    if user_data and user_data.get('is_banned'):
        await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
        return
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å
    user_states[user.id] = States.PROFILE_AGE
    user_profiles[user.id] = {}
    
    logger.info(f"üîß [PROFILE START] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –ø–æ—á–∞–≤ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é")
    
    await update.message.reply_text(
        "üìù *–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é*\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–∫ (18-100):",
        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True),
        parse_mode='Markdown'
    )

async def handle_profile_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    user = update.effective_user
    text = update.message.text
    state = user_states.get(user.id)

    logger.info(f"üîß [PROFILE] {user.first_name}: '{text}', —Å—Ç–∞–Ω: {state}")

    if text == "üîô –°–∫–∞—Å—É–≤–∞—Ç–∏":
        user_states[user.id] = States.START
        user_profiles.pop(user.id, None)
        await update.message.reply_text("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ", reply_markup=get_main_menu(user.id))
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user.id not in user_profiles:
        user_profiles[user.id] = {}
        logger.info(f"üîß [PROFILE] –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è {user.id}")

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∏ —Ü–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é —á–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ
    is_editing = False
    existing_user_data = db.get_user(user.id)
    if existing_user_data and existing_user_data.get('age'):
        is_editing = True
        logger.info(f"üîß [PROFILE] –†–µ–∂–∏–º: –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø –¥–ª—è {user.id}")

    if state == States.PROFILE_AGE:
        try:
            age = int(text)
            if age < 18 or age > 100:
                await update.message.reply_text("‚ùå –í—ñ–∫ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 18 –¥–æ 100 —Ä–æ–∫—ñ–≤")
                return
            
            user_profiles[user.id]['age'] = age
            user_states[user.id] = States.PROFILE_GENDER
            
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –≤—Å—Ç–∞–Ω–æ–≤–∏–≤ –≤—ñ–∫: {age}")
            
            keyboard = [[KeyboardButton("üë®"), KeyboardButton("üë©")], [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]]
            await update.message.reply_text(
                f"‚úÖ –í—ñ–∫: {age} —Ä–æ–∫—ñ–≤\n\n–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å:",
                reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            )
        except ValueError:
            await update.message.reply_text("‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤—ñ–∫ (—á–∏—Å–ª–æ)")

    elif state == States.PROFILE_GENDER:
        if text == "üë®":
            user_profiles[user.id]['gender'] = 'male'
            user_states[user.id] = States.PROFILE_CITY
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –æ–±—Ä–∞–≤ —Å—Ç–∞—Ç—å: male")
            await update.message.reply_text(
                "‚úÖ –°—Ç–∞—Ç—å: üë® –ß–æ–ª–æ–≤—ñ–∫\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ:",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        elif text == "üë©":
            user_profiles[user.id]['gender'] = 'female'
            user_states[user.id] = States.PROFILE_CITY
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –æ–±—Ä–∞–≤ —Å—Ç–∞—Ç—å: female")
            await update.message.reply_text(
                "‚úÖ –°—Ç–∞—Ç—å: üë© –ñ—ñ–Ω–∫–∞\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ:",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å –∑ –∫–Ω–æ–ø–æ–∫")

    elif state == States.PROFILE_CITY:
        if len(text) >= 2:
            user_profiles[user.id]['city'] = text
            user_states[user.id] = States.PROFILE_SEEKING_GENDER
            
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –≤—Å—Ç–∞–Ω–æ–≤–∏–≤ –º—ñ—Å—Ç–æ: {text}")
            
            keyboard = [
                [KeyboardButton("üë© –î—ñ–≤—á–∏–Ω—É"), KeyboardButton("üë® –•–ª–æ–ø—Ü—è")],
                [KeyboardButton("üë´ –í—Å—ñ—Ö")],
                [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]
            ]
            await update.message.reply_text(
                f"‚úÖ –ú—ñ—Å—Ç–æ: {text}\n\n–ö–æ–≥–æ —à—É–∫–∞—î—Ç–µ?",
                reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            )
        else:
            await update.message.reply_text("‚ùå –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞ –∑–∞–∫–æ—Ä–æ—Ç–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")

    elif state == States.PROFILE_SEEKING_GENDER:
        if text == "üë© –î—ñ–≤—á–∏–Ω—É":
            user_profiles[user.id]['seeking_gender'] = 'female'
            user_states[user.id] = States.PROFILE_GOAL
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} —à—É–∫–∞—î: female")
        elif text == "üë® –•–ª–æ–ø—Ü—è":
            user_profiles[user.id]['seeking_gender'] = 'male'
            user_states[user.id] = States.PROFILE_GOAL
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} —à—É–∫–∞—î: male")
        elif text == "üë´ –í—Å—ñ—Ö":
            user_profiles[user.id]['seeking_gender'] = 'all'
            user_states[user.id] = States.PROFILE_GOAL
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} —à—É–∫–∞—î: all")
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –∑ –∫–Ω–æ–ø–æ–∫")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –≤–∏–±—ñ—Ä —Ü—ñ–ª—ñ
        keyboard = [
            [KeyboardButton("üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏"), KeyboardButton("üë• –î—Ä—É–∂–±–∞")],
            [KeyboardButton("üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ"), KeyboardButton("üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫")],
            [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ]
        seeking_text = {
            'female': 'üë© –î—ñ–≤—á–∏–Ω—É',
            'male': 'üë® –•–ª–æ–ø—Ü—è', 
            'all': 'üë´ –í—Å—ñ—Ö'
        }.get(user_profiles[user.id]['seeking_gender'])
        
        await update.message.reply_text(
            f"‚úÖ –®—É–∫–∞—é: {seeking_text}\n\n–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    elif state == States.PROFILE_GOAL:
        goal_map = {
            'üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏': '–°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏',
            'üë• –î—Ä—É–∂–±–∞': '–î—Ä—É–∂–±–∞',
            'üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ': '–†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ',
            'üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫': '–ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫'
        }
        
        if text in goal_map:
            user_profiles[user.id]['goal'] = goal_map[text]
            user_states[user.id] = States.PROFILE_BIO
            
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –æ–±—Ä–∞–≤ —Ü—ñ–ª—å: {goal_map[text]}")
            
            await update.message.reply_text(
                f"‚úÖ –¶—ñ–ª—å: {text}\n\n–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤):",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑ –∫–Ω–æ–ø–æ–∫")

    elif state == States.PROFILE_BIO:
        if len(text) >= 10:
            user_profiles[user.id]['bio'] = text
            
            logger.info(f"üîß [PROFILE] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –∑–∞–ø–æ–≤–Ω–∏–≤ –±—ñ–æ")
            logger.info(f"üîß [PROFILE DATA] –ü–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é: {user_profiles[user.id]}")
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å
            success = db.update_user_profile(
                telegram_id=user.id,
                age=user_profiles[user.id]['age'],
                gender=user_profiles[user.id]['gender'],
                city=user_profiles[user.id]['city'],
                seeking_gender=user_profiles[user.id].get('seeking_gender', 'all'),
                goal=user_profiles[user.id]['goal'],
                bio=user_profiles[user.id]['bio']
            )
            
            if success:
                # –í–ò–†–Ü–®–ï–ù–ù–Ø –ü–†–û–ë–õ–ï–ú–ò: —Ä—ñ–∑–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
                if is_editing:
                    # –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø: –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
                    user_states[user.id] = States.START
                    user_profiles.pop(user.id, None)
                    
                    await update.message.reply_text(
                        "‚úÖ *–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!*",
                        reply_markup=get_main_menu(user.id),
                        parse_mode='Markdown'
                    )
                    
                    # –ü–æ–∫–∞–∑—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å
                    await show_my_profile(update, context)
                else:
                    # –°–¢–í–û–†–ï–ù–ù–Ø: –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ
                    user_states[user.id] = States.ADD_MAIN_PHOTO
                    
                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ
                    saved_user = db.get_user(user.id)
                    logger.info(f"üîß [PROFILE SAVED] –ó–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ: {saved_user}")
                    
                    await update.message.reply_text(
                        "üéâ *–ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ!*\n\n–¢–µ–ø–µ—Ä –¥–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é (–º–∞–∫—Å–∏–º—É–º 3 —Ñ–æ—Ç–æ):",
                        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏")]], resize_keyboard=True),
                        parse_mode='Markdown'
                    )
            else:
                await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é")
        else:
            await update.message.reply_text("‚ùå –û–ø–∏—Å –∑–∞–∫–æ—Ä–æ—Ç–∫–∏–π. –ú—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤.")

async def handle_main_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ"""
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –≤ –±–∞–∑—ñ
    user_data = db.get_user(user.id)
    if not user_data:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
        logger.info(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ...")
        success = db.add_user(user.id, user.username, user.first_name)
        if success:
            logger.info(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id} —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
        else:
            logger.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id}")
            await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é")
            return
    
    if user_states.get(user.id) == States.ADD_MAIN_PHOTO and update.message.photo:
        photo = update.message.photo[-1]
        
        logger.info(f"üîß [PHOTO] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –¥–æ–¥–∞—î —Ñ–æ—Ç–æ")
        
        # –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ
        success = db.add_profile_photo(user.id, photo.file_id)
        
        if success:
            photos = db.get_profile_photos(user.id)
            if len(photos) < 3:
                await update.message.reply_text(
                    f"‚úÖ –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ! –£ –≤–∞—Å {len(photos)}/3 —Ñ–æ—Ç–æ\n–ù–∞–¥—ñ—à–ª—ñ—Ç—å —â–µ —Ñ–æ—Ç–æ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏'",
                    reply_markup=ReplyKeyboardMarkup([['üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏']], resize_keyboard=True)
                )
            else:
                # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
                user_states[user.id] = States.START
                user_profiles.pop(user.id, None)
                
                # –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
                db.cursor.execute('UPDATE users SET has_photo = TRUE WHERE telegram_id = %s', (user.id,))
                db.conn.commit()
                
                await update.message.reply_text(
                    "‚úÖ –í–∏ –¥–æ–¥–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ç–æ (3 —Ñ–æ—Ç–æ)\nüéâ –ü—Ä–æ—Ñ—ñ–ª—å –≥–æ—Ç–æ–≤–∏–π!",
                    reply_markup=get_main_menu(user.id)
                )
        else:
            await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ")
    
    elif user_states.get(user.id) == States.ADD_MAIN_PHOTO and update.message.text == "üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏":
        # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        user_states[user.id] = States.START
        user_profiles.pop(user.id, None)
        photos_count = len(db.get_profile_photos(user.id))
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
        if photos_count > 0:
            db.cursor.execute('UPDATE users SET has_photo = TRUE WHERE telegram_id = %s', (user.id,))
            db.conn.commit()
        
        await update.message.reply_text(
            f"üéâ –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ! –î–æ–¥–∞–Ω–æ {photos_count} —Ñ–æ—Ç–æ",
            reply_markup=get_main_menu(user.id)
        )
    
    elif user_states.get(user.id) == States.ADD_MAIN_PHOTO:
        await update.message.reply_text("üì∑ –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ:")

async def show_my_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user = update.effective_user
    user_data = db.get_user(user.id)
    
    if not user_data or not user_data.get('age'):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—é", reply_markup=get_main_menu(user.id))
        return
    
    photos = db.get_profile_photos(user.id)
    
    # –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É
    logger.info(f"üîß [SHOW PROFILE] –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id}: {user_data}")
    
    # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
    gender_display = "üë® –ß–æ–ª–æ–≤—ñ–∫" if user_data['gender'] == 'male' else "üë© –ñ—ñ–Ω–∫–∞"
    
    seeking_display = {
        'female': 'üë© –î—ñ–≤—á–∏–Ω—É',
        'male': 'üë® –•–ª–æ–ø—Ü—è',
        'all': 'üë´ –í—Å—ñ—Ö'
    }.get(user_data.get('seeking_gender', 'all'), 'üë´ –í—Å—ñ—Ö')
    
    goal_display = {
        '–°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏': 'üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏',
        '–î—Ä—É–∂–±–∞': 'üë• –î—Ä—É–∂–±–∞',
        '–†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ': 'üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ',
        '–ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫': 'üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫'
    }.get(user_data['goal'], user_data['goal'])
    
    profile_text = f"""üë§ *–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å*

*–Ü–º'—è:* {user.first_name}
*–í—ñ–∫:* {user_data['age']} —Ä–æ–∫—ñ–≤
*–°—Ç–∞—Ç—å:* {gender_display}
*–ú—ñ—Å—Ç–æ:* {user_data['city']}
*–®—É–∫–∞—é:* {seeking_display}  
*–¶—ñ–ª—å:* {goal_display}

*–ü—Ä–æ —Å–µ–±–µ:*
{user_data['bio']}

*–§–æ—Ç–æ:* {len(photos)}/3
‚ù§Ô∏è *–õ–∞–π–∫—ñ–≤:* {user_data.get('likes_count', 0)}"""
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ –∑ –æ–ø–∏—Å–æ–º
    if photos:
        await update.message.reply_photo(
            photo=photos[0], 
            caption=profile_text,
            reply_markup=get_main_menu(user.id),
            parse_mode='Markdown'
        )
    else:
        await update.message.reply_text(
            profile_text,
            reply_markup=get_main_menu(user.id),
            parse_mode='Markdown'
        )

async def start_edit_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"""
    user = update.effective_user
    
    user_data = db.get_user(user.id)
    if not user_data or not user_data.get('age'):
        await update.message.reply_text(
            "‚ùå –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—é. –°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –π–æ–≥–æ!",
            reply_markup=get_main_menu(user.id)
        )
        return
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
    user_states[user.id] = States.PROFILE_AGE
    user_profiles[user.id] = {
        'age': user_data.get('age'),
        'gender': user_data.get('gender'),
        'city': user_data.get('city'),
        'seeking_gender': user_data.get('seeking_gender', 'all'),
        'goal': user_data.get('goal'),
        'bio': user_data.get('bio')
    }
    
    logger.info(f"üîß [EDIT PROFILE] –ü–æ—á–∞—Ç–æ–∫ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–ª—è {user.id}")
    logger.info(f"üîß [EDIT PROFILE] –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ: {user_profiles[user.id]}")
    
    await update.message.reply_text(
        "‚úèÔ∏è *–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é*\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–∫ (18-100):",
        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True),
        parse_mode='Markdown'
    )