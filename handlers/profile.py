from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from database.models import db
from keyboards.main_menu import get_main_menu
from utils.states import States, user_states, user_profiles

async def start_profile_creation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    user_data = db.get_user(user.id)
    if user_data and user_data.get('is_banned'):
        await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
        return
    
    user_states[user.id] = States.PROFILE_AGE
    user_profiles[user.id] = {}  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é
    await update.message.reply_text(
        "üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–∫:",
        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
    )

async def handle_profile_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    user_data = db.get_user(user.id)
    if user_data and user_data.get('is_banned'):
        await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
        return
    
    text = update.message.text
    state = user_states.get(user.id)

    print(f"üîß [PROFILE] {user.first_name}: '{text}', —Å—Ç–∞–Ω: {state}")

    if text == "üîô –°–∫–∞—Å—É–≤–∞—Ç–∏":
        user_states[user.id] = States.START
        await update.message.reply_text("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ", reply_markup=get_main_menu(user.id))
        return

    if state == States.PROFILE_AGE:
        try:
            age = int(text)
            if age < 18 or age > 100:
                await update.message.reply_text("‚ùå –í—ñ–∫ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 18 –¥–æ 100 —Ä–æ–∫—ñ–≤")
                return
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É user_profiles
            user_profiles[user.id]['age'] = age
            user_states[user.id] = States.PROFILE_GENDER
            keyboard = [[KeyboardButton("üë®"), KeyboardButton("üë©")], [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text(f"‚úÖ –í—ñ–∫: {age} —Ä–æ–∫—ñ–≤\n\n–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å:", reply_markup=reply_markup)
        except ValueError:
            await update.message.reply_text("‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤—ñ–∫ (—á–∏—Å–ª–æ)")

    elif state == States.PROFILE_GENDER:
        if text == "üë®":
            user_profiles[user.id]['gender'] = 'male'
            user_states[user.id] = States.PROFILE_CITY
            await update.message.reply_text(
                "‚úÖ –°—Ç–∞—Ç—å: üë® –ß–æ–ª–æ–≤—ñ–∫\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ:",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        elif text == "üë©":
            user_profiles[user.id]['gender'] = 'female'
            user_states[user.id] = States.PROFILE_CITY
            await update.message.reply_text(
                "‚úÖ –°—Ç–∞—Ç—å: üë© –ñ—ñ–Ω–∫–∞\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ:",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å –∑ –∫–Ω–æ–ø–æ–∫")

    elif state == States.PROFILE_CITY:
        if len(text) >= 2:
            user_profiles[user.id]['city'] = text
            user_states[user.id] = States.PROFILE_SEEKING_GENDER
            # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —Å—Ç–∞—Ç—ñ (–∑'—è–≤–ª—è—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –º—ñ—Å—Ç–∞)
            keyboard = [[KeyboardButton("üë© –î—ñ–≤—á–∏–Ω—É"), KeyboardButton("üë® –•–ª–æ–ø—Ü—è")], [KeyboardButton("üë´ –í—Å—ñ—Ö")], [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text(f"‚úÖ –ú—ñ—Å—Ç–æ: {text}\n\n–ö–æ–≥–æ —à—É–∫–∞—î—Ç–µ?", reply_markup=reply_markup)
        else:
            await update.message.reply_text("‚ùå –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞ –∑–∞–∫–æ—Ä–æ—Ç–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")

    elif state == States.PROFILE_SEEKING_GENDER:
        if text == "üë© –î—ñ–≤—á–∏–Ω—É":
            user_profiles[user.id]['seeking_gender'] = 'female'
            user_states[user.id] = States.PROFILE_GOAL
            keyboard = [
                [KeyboardButton("üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏"), KeyboardButton("üë• –î—Ä—É–∂–±–∞")],
                [KeyboardButton("üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ"), KeyboardButton("üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫")],
                [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text("‚úÖ –®—É–∫–∞—é: üë© –î—ñ–≤—á–∏–Ω—É\n\n–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞:", reply_markup=reply_markup)
        elif text == "üë® –•–ª–æ–ø—Ü—è":
            user_profiles[user.id]['seeking_gender'] = 'male'
            user_states[user.id] = States.PROFILE_GOAL
            keyboard = [
                [KeyboardButton("üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏"), KeyboardButton("üë• –î—Ä—É–∂–±–∞")],
                [KeyboardButton("üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ"), KeyboardButton("üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫")],
                [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text("‚úÖ –®—É–∫–∞—é: üë® –•–ª–æ–ø—Ü—è\n\n–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞:", reply_markup=reply_markup)
        elif text == "üë´ –í—Å—ñ—Ö":
            user_profiles[user.id]['seeking_gender'] = 'all'
            user_states[user.id] = States.PROFILE_GOAL
            keyboard = [
                [KeyboardButton("üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏"), KeyboardButton("üë• –î—Ä—É–∂–±–∞")],
                [KeyboardButton("üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ"), KeyboardButton("üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫")],
                [KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text("‚úÖ –®—É–∫–∞—é: üë´ –í—Å—ñ—Ö\n\n–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞:", reply_markup=reply_markup)
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –∑ –∫–Ω–æ–ø–æ–∫")

    elif state == States.PROFILE_GOAL:
        if text == "üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏":
            user_profiles[user.id]['goal'] = '–°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏'
            user_states[user.id] = States.PROFILE_BIO
            await update.message.reply_text(
                "‚úÖ –¶—ñ–ª—å: üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏\n\n–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤):",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        elif text == "üë• –î—Ä—É–∂–±–∞":
            user_profiles[user.id]['goal'] = '–î—Ä—É–∂–±–∞'
            user_states[user.id] = States.PROFILE_BIO
            await update.message.reply_text(
                "‚úÖ –¶—ñ–ª—å: üë• –î—Ä—É–∂–±–∞\n\n–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤):",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        elif text == "üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ":
            user_profiles[user.id]['goal'] = '–†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ'
            user_states[user.id] = States.PROFILE_BIO
            await update.message.reply_text(
                "‚úÖ –¶—ñ–ª—å: üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ\n\n–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤):",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        elif text == "üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫":
            user_profiles[user.id]['goal'] = '–ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫'
            user_states[user.id] = States.PROFILE_BIO
            await update.message.reply_text(
                "‚úÖ –¶—ñ–ª—å: üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫\n\n–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤):",
                reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)
            )
        else:
            await update.message.reply_text("‚ùå –û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å –∑ –∫–Ω–æ–ø–æ–∫")

    elif state == States.PROFILE_BIO:
        if len(text) >= 10:
            user_profiles[user.id]['bio'] = text
        
            print(f"üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è {user.id}")
            print(f"üíæ –î–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é: {user_profiles[user.id]}")
        
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
            success = db.update_user_profile(
                telegram_id=user.id,
                age=user_profiles[user.id]['age'],
                gender=user_profiles[user.id]['gender'],
                city=user_profiles[user.id]['city'],
                seeking_gender=user_profiles[user.id].get('seeking_gender', 'all'),
                goal=user_profiles[user.id]['goal'],
                bio=user_profiles[user.id]['bio']
            )
        
            print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {success}")
        
            if success:
                user_states[user.id] = States.ADD_MAIN_PHOTO
                await update.message.reply_text(
                    "üì∑ –¢–µ–ø–µ—Ä –¥–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é (–º–∞–∫—Å–∏–º—É–º 3 —Ñ–æ—Ç–æ):",
                    reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏")]], resize_keyboard=True)
                )
            else:
                await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é")
        else:
            await update.message.reply_text("‚ùå –û–ø–∏—Å –∑–∞–∫–æ—Ä–æ—Ç–∫–∏–π. –ú—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")

async def handle_main_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    user_data = db.get_user(user.id)
    if user_data and user_data.get('is_banned'):
        await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
        return
    
    if user_states.get(user.id) == States.ADD_MAIN_PHOTO and update.message.photo:
        photo = update.message.photo[-1]
        print(f"üì∑ –û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–æ—Ç–æ –¥–ª—è {user.id}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ç–æ
        current_photos = db.get_profile_photos(user.id)
        if len(current_photos) >= 3:
            user_states[user.id] = States.START
            await update.message.reply_text(
                "‚úÖ –í–∏ –¥–æ–¥–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ç–æ (3 —Ñ–æ—Ç–æ)\n–ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ!",
                reply_markup=get_main_menu(user.id)
            )
            return
        
        success = db.add_profile_photo(user.id, photo.file_id)
        
        if success:
            photos = db.get_profile_photos(user.id)
            if len(photos) < 3:
                await update.message.reply_text(
                    f"‚úÖ –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ! –£ –≤–∞—Å {len(photos)}/3 —Ñ–æ—Ç–æ\n–ù–∞–¥—ñ—à–ª—ñ—Ç—å —â–µ —Ñ–æ—Ç–æ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏'",
                    reply_markup=ReplyKeyboardMarkup([['üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏']], resize_keyboard=True)
                )
            else:
                user_states[user.id] = States.START
                await update.message.reply_text(
                    "‚úÖ –í–∏ –¥–æ–¥–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ç–æ (3 —Ñ–æ—Ç–æ)\n–ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ!",
                    reply_markup=get_main_menu(user.id)
                )
        else:
            await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ")
    
    elif user_states.get(user.id) == States.ADD_MAIN_PHOTO and update.message.text == "üîô –ó–∞–≤–µ—Ä—à–∏—Ç–∏":
        user_states[user.id] = States.START
        photos_count = len(db.get_profile_photos(user.id))
        await update.message.reply_text(
            f"üéâ –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ! –î–æ–¥–∞–Ω–æ {photos_count} —Ñ–æ—Ç–æ",
            reply_markup=get_main_menu(user.id)
        )
    
    elif user_states.get(user.id) == States.ADD_MAIN_PHOTO:
        await update.message.reply_text("üì∑ –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ:")

async def show_my_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    user_data = db.get_user(user.id)
    if user_data and user_data.get('is_banned'):
        await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
        return
    
    user_data = db.get_user(user.id)
    
    if not user_data or not user_data.get('age'):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—é", reply_markup=get_main_menu(user.id))
        return
    
    photos = db.get_profile_photos(user.id)
    
    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—ñ
    gender_display = "üë® –ß–æ–ª–æ–≤—ñ–∫" if user_data['gender'] == 'male' else "üë© –ñ—ñ–Ω–∫–∞"
    
    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–≥–æ —à—É–∫–∞—î
    seeking_display = {
        'female': 'üë© –î—ñ–≤—á–∏–Ω—É',
        'male': 'üë® –•–ª–æ–ø—Ü—è',
        'all': 'üë´ –í—Å—ñ—Ö'
    }.get(user_data.get('seeking_gender', 'all'), 'üë´ –í—Å—ñ—Ö')
    
    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª—ñ
    goal_display = {
        '–°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏': 'üíû –°–µ—Ä–π–æ–∑–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏',
        '–î—Ä—É–∂–±–∞': 'üë• –î—Ä—É–∂–±–∞',
        '–†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ': 'üéâ –†–∞–∑–æ–≤—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ',
        '–ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫': 'üèÉ –ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫'
    }.get(user_data['goal'], user_data['goal'])
    
    profile_text = f"""üë§ *–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å*

*–Ü–º'—è:* {user.first_name}
*–í—ñ–∫:* {user_data['age']} —Ä–æ–∫—ñ–≤
*–°—Ç–∞—Ç—å:* {gender_display}
*–ú—ñ—Å—Ç–æ:* {user_data['city']}
*–®—É–∫–∞—é:* {seeking_display}  
*–¶—ñ–ª—å:* {goal_display}

*–ü—Ä–æ —Å–µ–±–µ:*
{user_data['bio']}

*–§–æ—Ç–æ:* {len(photos)}/3
‚ù§Ô∏è *–õ–∞–π–∫—ñ–≤:* {user_data['likes_count']}"""
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—Å—ñ —Ñ–æ—Ç–æ
    if photos:
        # –ü–µ—Ä—à–µ —Ñ–æ—Ç–æ –∑ –æ–ø–∏—Å–æ–º –ø—Ä–æ—Ñ—ñ–ª—é
        await update.message.reply_photo(
            photo=photos[0], 
            caption=profile_text,
            reply_markup=get_main_menu(user.id),
            parse_mode='Markdown'
        )
        
        # –†–µ—à—Ç–∞ —Ñ–æ—Ç–æ –±–µ–∑ –æ–ø–∏—Å—É
        for i, photo_id in enumerate(photos[1:], 2):
            try:
                await update.message.reply_photo(
                    photo=photo_id, 
                    caption=f"–§–æ—Ç–æ {i} –∑ {len(photos)}"
                )
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ: {e}")
                await update.message.reply_text(f"üì∏ –§–æ—Ç–æ {i} (–ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)")
    else:
        await update.message.reply_text(
            profile_text,
            reply_markup=get_main_menu(user.id),
            parse_mode='Markdown'
        )