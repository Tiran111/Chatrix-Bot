from telegram import Update
from telegram.ext import ContextTypes
try:
    from database_postgres import db
except ImportError:
    from database.models import db
from keyboards.main_menu import get_main_menu, get_gallery_menu, get_gallery_navigation, get_profile_navigation
from keyboards.main_menu import get_main_menu, get_gallery_menu, get_gallery_navigation, get_profile_navigation
from utils.states import States, user_states, gallery_view_data

async def show_gallery(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    gallery = db.get_user_gallery(user.id)
    profile, is_complete = db.get_user_profile(user.id)
    
    if profile and profile[9]:
        likes_count = db.get_likes_count(user.id)
        await update.message.reply_photo(
            photo=profile[9],
            caption=f"üì∑ –í–∞—à–µ –≥–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ—ñ–ª—ñ\n‚ù§Ô∏è –õ–∞–π–∫—ñ–≤: {likes_count}"
        )
    
    if gallery:
        await update.message.reply_text(f"üì∏ –í–∞—à–∞ –≥–∞–ª–µ—Ä–µ—è ({len(gallery)} —Ñ–æ—Ç–æ):")
        for i, photo_id in enumerate(gallery, 1):
            await update.message.reply_photo(photo=photo_id, caption=f"–§–æ—Ç–æ {i}")
    else:
        await update.message.reply_text("üì∏ –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—ó")
    
    await update.message.reply_text("–©–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏?", reply_markup=get_gallery_menu())

async def handle_add_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—é"""
    user = update.effective_user
    
    if user_states.get(user.id) == States.ADD_PHOTO and update.message.photo:
        photo = update.message.photo[-1]
        print(f"üì∑ –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—é –¥–ª—è {user.id}")
        
        # –î–æ–¥–∞—î–º–æ —Ñ–æ—Ç–æ
        success = db.add_profile_photo(user.id, photo.file_id)
        user_states[user.id] = States.START
        
        if success:
            photos = db.get_profile_photos(user.id)
            await update.message.reply_text(
                f"‚úÖ –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ! –£ –≤–∞—Å {len(photos)}/5 —Ñ–æ—Ç–æ",
                reply_markup=get_main_menu(user.id)
            )
        else:
            await update.message.reply_text(
                "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ. –ú–æ–∂–ª–∏–≤–æ –¥–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç (5 —Ñ–æ—Ç–æ).",
                reply_markup=get_main_menu(user.id)
            )
    elif user_states.get(user.id) == States.ADD_PHOTO:
        await update.message.reply_text("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ:")
async def view_user_gallery(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    current_profile_id = context.user_data.get('current_profile_id')
    
    if not current_profile_id:
        await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—å", reply_markup=get_main_menu(user.id))
        return
    
    user_profile = db.get_user_by_id(current_profile_id)
    if not user_profile:
        await update.message.reply_text("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", reply_markup=get_main_menu(user.id))
        return
    
    gallery = db.get_other_user_gallery(current_profile_id)
    
    if not gallery:
        await update.message.reply_text(
            f"üì∏ –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_profile[2]} —â–µ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—ó",
            reply_markup=get_main_menu(user.id)
        )
        return
    
    gallery_view_data[user.id] = {
        'user_id': current_profile_id,
        'user_name': user_profile[2],
        'photos': gallery,
        'current_index': 0
    }
    
    user_states[user.id] = States.VIEW_USER_GALLERY
    
    photo_id = gallery[0]
    caption = f"üì∏ –ì–∞–ª–µ—Ä–µ—è {user_profile[2]}\n–§–æ—Ç–æ 1 –∑ {len(gallery)}"
    
    await update.message.reply_photo(photo=photo_id, caption=caption, reply_markup=get_gallery_navigation())

async def handle_gallery_navigation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text
    
    if user.id not in gallery_view_data:
        await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó", reply_markup=get_main_menu(user.id))
        user_states[user.id] = States.START
        return
    
    gallery_data = gallery_view_data[user.id]
    photos = gallery_data['photos']
    current_index = gallery_data['current_index']
    user_name = gallery_data['user_name']
    
    if text == '‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–µ':
        if current_index < len(photos) - 1:
            current_index += 1
        else:
            await update.message.reply_text("‚úÖ –¶–µ –æ—Å—Ç–∞–Ω–Ω—î —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—ó")
            return
    elif text == '‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—î':
        if current_index > 0:
            current_index -= 1
        else:
            await update.message.reply_text("‚úÖ –¶–µ –ø–µ—Ä—à–µ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—ó")
            return
    elif text == 'üìù –ü—Ä–æ—Ñ—ñ–ª—å':
        user_profile = db.get_user_by_id(gallery_data['user_id'])
        from handlers.search import show_user_profile
        await show_user_profile(update, context, user_profile, "üë§ –ü—Ä–æ—Ñ—ñ–ª—å")
        user_states[user.id] = States.START
        return
    elif text == 'üîô –ì–∞–ª–µ—Ä–µ—è':
        await show_gallery(update, context)
        user_states[user.id] = States.START
        return
    
    gallery_data['current_index'] = current_index
    gallery_view_data[user.id] = gallery_data
    
    photo_id = photos[current_index]
    caption = f"üì∏ –ì–∞–ª–µ—Ä–µ—è {user_name}\n–§–æ—Ç–æ {current_index + 1} –∑ {len(photos)}"
    
    await update.message.reply_photo(photo=photo_id, caption=caption, reply_markup=get_gallery_navigation())

async def view_my_gallery_from_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    gallery = db.get_user_gallery(user.id)
    
    if not gallery:
        await update.message.reply_text("üì∏ –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—ó", reply_markup=get_profile_navigation())
        return
    
    gallery_view_data[user.id] = {
        'user_id': user.id,
        'user_name': "–í–∞—à–∞",
        'photos': gallery,
        'current_index': 0,
        'from_profile': True
    }
    
    user_states[user.id] = States.VIEW_USER_GALLERY
    
    photo_id = gallery[0]
    caption = f"üì∏ –í–∞—à–∞ –≥–∞–ª–µ—Ä–µ—è\n–§–æ—Ç–æ 1 –∑ {len(gallery)}"
    
    await update.message.reply_photo(photo=photo_id, caption=caption, reply_markup=get_gallery_navigation())