from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import CallbackContext
try:
    from database_postgres import db
except ImportError:
    from database.models import db
from keyboards.main_menu import get_main_menu
from utils.states import user_states, States
from config import ADMIN_ID
from handlers.notifications import notification_system
import logging

logger = logging.getLogger(__name__)

# ... —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω ...

async def show_profile_views(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —Ö—Ç–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞–≤ –ø—Ä–æ—Ñ—ñ–ª—å"""
    user = update.effective_user
    
    try:
        user_data = db.get_user(user.id)
        if user_data and user_data.get('is_banned'):
            await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
            return
        
        viewers = db.get_profile_views(user.id)
        
        logger.info(f"üîç [PROFILE VIEWS] –î–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id} –∑–Ω–∞–π–¥–µ–Ω–æ {len(viewers)} –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤")
        
        if viewers:
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á—ñ–≤ —É –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ
            context.user_data['profile_viewers'] = viewers
            context.user_data['current_viewer_index'] = 0
            
            await update.message.reply_text(
                f"üëÄ *–í–∞—Å –ø–µ—Ä–µ–≥–ª—è–¥–∞–ª–∏ ({len(viewers)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤):*", 
                parse_mode='Markdown'
            )
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞
            await show_next_profile_view(update, context)
                    
        else:
            await update.message.reply_text(
                "üòî –í–∞—Å —â–µ –Ω—ñ—Ö—Ç–æ –Ω–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞–≤\n\n"
                "üí° *–ü–æ—Ä–∞–¥–∞:*\n"
                "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ñ—à–µ —à—É–∫–∞–π—Ç–µ –∞–Ω–∫–µ—Ç–∏\n"
                "‚Ä¢ –°—Ç–∞–≤—Ç–µ –ª–∞–π–∫–∏\n" 
                "‚Ä¢ –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ–≤–Ω—ñ—Å—Ç—é\n"
                "‚Ä¢ –î–æ–¥–∞–π—Ç–µ —è–∫—ñ—Å–Ω—ñ —Ñ–æ—Ç–æ",
                reply_markup=get_main_menu(user.id),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu(user.id)
        )

async def show_next_profile_view(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞"""
    user = update.effective_user
    
    try:
        user_data = db.get_user(user.id)
        if user_data and user_data.get('is_banned'):
            await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
            return
        
        viewers = context.user_data.get('profile_viewers', [])
        
        if not viewers:
            await update.message.reply_text(
                "üòî –ë—ñ–ª—å—à–µ –Ω–µ–º–∞—î –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤",
                reply_markup=get_main_menu(user.id)
            )
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        current_index = context.user_data.get('current_viewer_index', 0)
        
        if current_index >= len(viewers):
            await update.message.reply_text(
                "‚úÖ –¶–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥",
                reply_markup=get_main_menu(user.id)
            )
            return
        
        viewer = viewers[current_index]
        
        try:
            # –í–∏–∑–Ω–∞—á–∞—î–º–æ ID –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞
            if isinstance(viewer, dict):
                viewer_id = viewer.get('telegram_id')
            else:
                viewer_id = viewer[1] if len(viewer) > 1 else None
            
            if not viewer_id:
                # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø—É—Å—Ç–∏–π —ñ –π–¥–µ–º–æ –¥–∞–ª—ñ
                context.user_data['current_viewer_index'] = current_index + 1
                await show_next_profile_view(update, context)
                return
            
            # –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å
            profile_text = format_profile_text(viewer, "üëÄ –ü–µ—Ä–µ–≥–ª—è–¥–∞–≤(–ª–∞) –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å")
            main_photo = db.get_main_photo(viewer_id)
            
            # –û—Ç—Ä–∏–º—É—î–º–æ username
            viewed_user = db.get_user(viewer_id)
            username = viewed_user.get('username') if viewed_user else None
            
            if main_photo:
                caption = profile_text
                if username:
                    caption += f"\n\nüí¨ Username: @{username}"
                
                await update.message.reply_photo(
                    photo=main_photo,
                    caption=caption,
                    parse_mode='Markdown'
                )
            else:
                text = profile_text
                if username:
                    text += f"\n\nüí¨ Username: @{username}"
                
                await update.message.reply_text(
                    text,
                    parse_mode='Markdown'
                )
            
            # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –ª–∞–π–∫—É —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é
            context.user_data['current_profile_for_like'] = viewer_id
            keyboard = [
                ['‚ù§Ô∏è –õ–∞–π–∫–Ω—É—Ç–∏'],
                ['‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∏–π –ø–µ—Ä–µ–≥–ª—è–¥', 'üîô –ú–µ–Ω—é']
            ]
            await update.message.reply_text(
                "–ë–∞–∂–∞—î—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ª–∞–π–∫?",
                reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            )
            
            # –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞
            context.user_data['current_viewer_index'] = current_index + 1
                    
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞ #{current_index}: {e}")
            # –ü—Ä–æ–±—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ
            context.user_data['current_viewer_index'] = current_index + 1
            await show_next_profile_view(update, context)
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu(user.id)
        )

async def handle_top_navigation(update: Update, context: CallbackContext):
    """–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –ø–æ —Ç–æ–ø—É"""
    user = update.effective_user
    
    try:
        user_data = db.get_user(user.id)
        if user_data and user_data.get('is_banned'):
            await update.message.reply_text("üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
            return
        
        top_users = context.user_data.get('top_users', [])
        current_index = context.user_data.get('current_top_index', 0)
        
        if current_index < len(top_users) - 1:
            current_index += 1
            context.user_data['current_top_index'] = current_index
            
            user_data = top_users[current_index]
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if isinstance(user_data, dict):
                user_id = user_data.get('telegram_id')
                first_name = user_data.get('first_name', '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á')
                age = user_data.get('age', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
                gender = user_data.get('gender', 'unknown')
                city = user_data.get('city', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
                goal = user_data.get('goal', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
                bio = user_data.get('bio', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
                rating = user_data.get('rating', 5.0)
                likes_count = user_data.get('likes_count', 0)
            else:
                user_id = user_data[1] if len(user_data) > 1 else None
                first_name = user_data[3] if len(user_data) > 3 and user_data[3] else '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'
                age = user_data[4] if len(user_data) > 4 else '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                gender = user_data[5] if len(user_data) > 5 else 'unknown'
                city = user_data[6] if len(user_data) > 6 else '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                goal = user_data[8] if len(user_data) > 8 else '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                bio = user_data[9] if len(user_data) > 9 else '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                rating = user_data[14] if len(user_data) > 14 else 5.0
                likes_count = user_data[12] if len(user_data) > 12 else 0
            
            profile_text = f"""üèÖ #{current_index + 1} | ‚≠ê {rating:.1f} | ‚ù§Ô∏è {likes_count} –ª–∞–π–∫—ñ–≤

*–Ü–º'—è:* {first_name}
*–í—ñ–∫:* {age} —Ä–æ–∫—ñ–≤
*–°—Ç–∞—Ç—å:* {'üë® –ß–æ–ª–æ–≤—ñ–∫' if gender == 'male' else 'üë© –ñ—ñ–Ω–∫–∞'}
*–ú—ñ—Å—Ç–æ:* {city}
*–¶—ñ–ª—å:* {goal}
*‚≠ê –†–µ–π—Ç–∏–Ω–≥:* {rating:.1f}/10.0

*–ü—Ä–æ —Å–µ–±–µ:*
{bio if bio else "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}"""
            
            main_photo = db.get_main_photo(user_id)
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è –ª–∞–π–∫—É
            context.user_data['current_profile_for_like'] = user_id
            
            if main_photo:
                await update.message.reply_photo(
                    photo=main_photo,
                    caption=profile_text,
                    parse_mode='Markdown'
                )
            else:
                await update.message.reply_text(profile_text, parse_mode='Markdown')
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–æ—é –ª–∞–π–∫—É
            keyboard = [
                ['‚ù§Ô∏è –õ–∞–π–∫'],
                ['‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∏–π —É —Ç–æ–ø—ñ', 'üîô –ú–µ–Ω—é']  # ‚Üê –î–û–î–ê–Ñ–ú–û –ö–ù–û–ü–ö–£ –ú–ï–ù–Æ
            ]
            await update.message.reply_text(
                "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
                reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            )
        else:
            await update.message.reply_text(
                "‚úÖ –¶–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Ç–æ–ø—ñ",
                reply_markup=get_main_menu(user.id)
            )
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ —Ç–æ–ø—É: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu(user.id)
        )

async def show_next_after_like(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è –ª–∞–π–∫—É"""
    try:
        user = update.effective_user
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–≤—ñ–¥–∫–∏ –ø—Ä–∏–π—à–æ–≤ –ª–∞–π–∫ (—Ç–æ–ø —á–∏ –ø–µ—Ä–µ–≥–ª—è–¥–∏)
        if context.user_data.get('top_users'):
            # –ó —Ç–æ–ø—É - –ø–æ–∫–∞–∑—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≤ —Ç–æ–ø—ñ
            await handle_top_navigation(update, context)
        elif context.user_data.get('profile_viewers'):
            # –ó –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤ - –ø–æ–∫–∞–∑—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—á–∞
            await show_next_profile_view(update, context)
        else:
            # –ó—ñ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –ø–æ—à—É–∫—É - –ø–æ–∫–∞–∑—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å
            await show_next_profile(update, context)
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ—Å–ª—è –ª–∞–π–∫—É: {e}")
        await update.message.reply_text(
            "üéâ –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!",
            reply_markup=get_main_menu(user.id)
        )                