from database.models import db
import sqlite3

def update_database_structure():
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    print("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")
    
    try:
        # –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É rating –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users
        db.cursor.execute('''
            ALTER TABLE users ADD COLUMN rating REAL DEFAULT 5.0
        ''')
        print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'rating' –¥–æ–¥–∞–Ω–∞ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users")
        
        # –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ–±–º–µ–∂–µ–Ω–Ω—è –ª–∞–π–∫—ñ–≤
        db.cursor.execute('''
            ALTER TABLE users ADD COLUMN daily_likes_count INTEGER DEFAULT 0
        ''')
        print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'daily_likes_count' –¥–æ–¥–∞–Ω–∞ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users")
        
        db.cursor.execute('''
            ALTER TABLE users ADD COLUMN last_like_date DATE
        ''')
        print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'last_like_date' –¥–æ–¥–∞–Ω–∞ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users")
        
        db.conn.commit()
        print("üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        check_database_structure()
        
    except sqlite3.OperationalError as e:
        if "duplicate column name" in str(e):
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∏ –≤–∂–µ —ñ—Å–Ω—É—é—Ç—å –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")

def check_database_structure():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    print("\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ users
    db.cursor.execute("PRAGMA table_info(users)")
    columns = db.cursor.fetchall()
    
    print("üìã –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ users:")
    for column in columns:
        print(f"  - {column[1]} ({column[2]})")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    db.cursor.execute("SELECT COUNT(*) FROM users WHERE age IS NOT NULL AND has_photo = TRUE")
    active_users = db.cursor.fetchone()[0]
    print(f"\nüë• –ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {active_users}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    db.cursor.execute('''
        SELECT telegram_id, first_name, rating, likes_count 
        FROM users 
        WHERE age IS NOT NULL AND has_photo = TRUE AND is_banned = FALSE
        ORDER BY rating DESC, likes_count DESC 
        LIMIT 5
    ''')
    top_users = db.cursor.fetchall()
    
    print(f"\nüèÜ –¢–æ–ø-5 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:")
    for i, user in enumerate(top_users, 1):
        print(f"  {i}. {user[1]} (–†–µ–π—Ç–∏–Ω–≥: {user[2]}, –õ–∞–π–∫—ñ–≤: {user[3]})")

def fix_user_ratings():
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    print("\nüîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    db.cursor.execute('''
        SELECT telegram_id FROM users 
        WHERE age IS NOT NULL AND has_photo = TRUE AND is_banned = FALSE
    ''')
    users = db.cursor.fetchall()
    
    updated_count = 0
    for user in users:
        telegram_id = user[0]
        new_rating = db.calculate_user_rating(telegram_id)
        
        db.cursor.execute(
            'UPDATE users SET rating = ? WHERE telegram_id = ?',
            (new_rating, telegram_id)
        )
        updated_count += 1
    
    db.conn.commit()
    print(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è {updated_count} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")

if __name__ == "__main__":
    update_database_structure()
    fix_user_ratings()