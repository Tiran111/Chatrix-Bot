import requests
import time
import threading
import logging

logger = logging.getLogger(__name__)

class KeepAlive:
    def __init__(self, url="https://chatrix-bot-4m1p.onrender.com", interval=300):  # 5 —Ö–≤–∏–ª–∏–Ω
        self.url = url
        self.interval = interval
        self.is_running = False
        self.thread = None
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –ø—ñ–Ω–≥—É–≤–∞–Ω–Ω—è"""
        if self.is_running:
            return
        
        self.is_running = True
        self.thread = threading.Thread(target=self._ping_loop, daemon=True)
        self.thread.start()
        logger.info(f"üöÄ Keep-alive –∑–∞–ø—É—â–µ–Ω–æ –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {self.interval} —Å–µ–∫—É–Ω–¥")
    
    def stop(self):
        """–ó—É–ø–∏–Ω–∫–∞ –ø—ñ–Ω–≥—É–≤–∞–Ω–Ω—è"""
        self.is_running = False
        if self.thread:
            self.thread.join()
        logger.info("üõë Keep-alive –∑—É–ø–∏–Ω–µ–Ω–æ")
    
    def _ping_loop(self):
        """–¶–∏–∫–ª –ø—ñ–Ω–≥—É–≤–∞–Ω–Ω—è"""
        while self.is_running:
            try:
                response = requests.get(self.url, timeout=10)
                if response.status_code == 200:
                    logger.info("‚úÖ Keep-alive ping successful")
                else:
                    logger.warning(f"‚ö†Ô∏è Keep-alive ping returned status: {response.status_code}")
            except Exception as e:
                logger.error(f"‚ùå Keep-alive ping failed: {e}")
            
            time.sleep(self.interval)

# –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
keep_alive = KeepAlive()

def start_keep_alive():
    """–ó–∞–ø—É—Å–∫ keep-alive"""
    keep_alive.start()

def stop_keep_alive():
    """–ó—É–ø–∏–Ω–∫–∞ keep-alive"""
    keep_alive.stop()